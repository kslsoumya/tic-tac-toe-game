{"version":3,"sources":["index.js"],"names":["Square","props","style","pos","indexOf","currentPos","border","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","winner","Board","this","handleClick","items","z","content","push","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","XIsNext","slice","winnerResult","setState","concat","step","status","current","moves","map","move","desc","jumpTo","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.30f03ab6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  let style;\r\n  if (props.pos && props.pos.indexOf(props.currentPos) > -1) {\r\n    style = { border: \"3px  solid green\" };\r\n  }\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick} style={style}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  let lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n    [1, 4, 7],\r\n    [0, 3, 6],\r\n    [2, 5, 8],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { winner: squares[a], pos: [a, b, c] };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.handleClick(i)}\r\n        pos={this.props.pos}\r\n        currentPos={i}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    let items = [];\r\n    for (let j = 3, z = 0; z < 3; z++) {\r\n      let content = [];\r\n      for (let i = 0; i < 3; i++) {\r\n        content.push(this.renderSquare(i + j * z));\r\n      }\r\n      items.push(\r\n        <div className=\"board-row\" key={z + 2}>\r\n          {content}\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{items}</div>;\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      XIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const winnerResult = calculateWinner(squares);\r\n    if (winnerResult?.winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.XIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([{ squares: squares }]),\r\n      stepNumber: history.length,\r\n      XIsNext: !this.state.XIsNext,\r\n    });\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      XIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winnerResult = calculateWinner(current.squares);\r\n    let status;\r\n    if (winnerResult?.winner) {\r\n      status = \"Winner is \" + winnerResult.winner;\r\n    } else {\r\n      status =\r\n        current.squares.indexOf(null) === -1\r\n          ? \"Sorry the game is over\"\r\n          : \"Next Player :\" + (this.state.XIsNext ? \"X\" : \"O\");\r\n    }\r\n    const moves = history.map((step, move) => {\r\n      let style;\r\n      if (move === this.state.stepNumber) {\r\n        style = { border: \"3px solid green\" };\r\n      }\r\n      const desc = move ? \"Got to # \" + move : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)} style={style}>\r\n            {\" \"}\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            handleClick={(i) => this.handleClick(i)}\r\n            pos={winnerResult?.pos}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDom.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}